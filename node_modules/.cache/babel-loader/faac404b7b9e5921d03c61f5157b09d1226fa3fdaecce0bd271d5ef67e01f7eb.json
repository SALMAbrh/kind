{"ast":null,"code":"var _jsxFileName = \"D:\\\\cloud00\\\\cloud-project\\\\src\\\\components\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\"; // Import useNavigate\nimport { signInWithEmailAndPassword, signInWithPopup, GoogleAuthProvider } from \"firebase/auth\";\nimport { auth } from \"../firebase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = ({\n  onLoginSuccess\n}) => {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const navigate = useNavigate(); // Initialize useNavigate\n\n  const handleLogin = async e => {\n    e.preventDefault();\n    try {\n      await signInWithEmailAndPassword(auth, email, password);\n      alert(\"Login successful!\");\n      onLoginSuccess(); // Notify the App component about successful login\n      navigate(\"/reserve\"); // Redirect to Reserve page\n    } catch (error) {\n      alert(error.message);\n    }\n  };\n  const handleGoogleLogin = async () => {\n    const provider = new GoogleAuthProvider();\n    try {\n      await signInWithPopup(auth, provider);\n      alert(\"Login with Google successful!\");\n      onLoginSuccess(); // Notify the App component about successful login\n      navigate(\"/reserve\"); // Redirect to Reserve page\n    } catch (error) {\n      alert(error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleLogin,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"Email\",\n        value: email,\n        onChange: e => setEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        value: password,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleGoogleLogin,\n      children: \"Login with Google\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"rIjyA2uJXTJXGlQGcq/HSho2Mo8=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useNavigate","signInWithEmailAndPassword","signInWithPopup","GoogleAuthProvider","auth","jsxDEV","_jsxDEV","Login","onLoginSuccess","_s","email","setEmail","password","setPassword","navigate","handleLogin","e","preventDefault","alert","error","message","handleGoogleLogin","provider","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","onClick","_c","$RefreshReg$"],"sources":["D:/cloud00/cloud-project/src/components/Login.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\"; // Import useNavigate\nimport { signInWithEmailAndPassword, signInWithPopup, GoogleAuthProvider } from \"firebase/auth\";\nimport { auth } from \"../firebase\";\n\nconst Login = ({ onLoginSuccess }) => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const navigate = useNavigate(); // Initialize useNavigate\n\n  const handleLogin = async (e) => {\n    e.preventDefault();\n    try {\n      await signInWithEmailAndPassword(auth, email, password);\n      alert(\"Login successful!\");\n      onLoginSuccess(); // Notify the App component about successful login\n      navigate(\"/reserve\"); // Redirect to Reserve page\n    } catch (error) {\n      alert(error.message);\n    }\n  };\n\n  const handleGoogleLogin = async () => {\n    const provider = new GoogleAuthProvider();\n    try {\n      await signInWithPopup(auth, provider);\n      alert(\"Login with Google successful!\");\n      onLoginSuccess(); // Notify the App component about successful login\n      navigate(\"/reserve\"); // Redirect to Reserve page\n    } catch (error) {\n      alert(error.message);\n    }\n  };\n\n  return (\n    <div>\n      <h1>Login</h1>\n      <form onSubmit={handleLogin}>\n        <input\n          type=\"email\"\n          placeholder=\"Email\"\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n        />\n        <input\n          type=\"password\"\n          placeholder=\"Password\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n        />\n        <button type=\"submit\">Login</button>\n      </form>\n      <button onClick={handleGoogleLogin}>Login with Google</button>\n    </div>\n  );\n};\n\nexport default Login;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}