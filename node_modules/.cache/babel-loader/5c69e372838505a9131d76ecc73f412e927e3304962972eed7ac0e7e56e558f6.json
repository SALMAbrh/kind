{"ast":null,"code":"var _jsxFileName = \"D:\\\\cloud00\\\\cloud-project\\\\src\\\\components\\\\Reserve.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport FullCalendar from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport interactionPlugin from \"@fullcalendar/interaction\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CLIENT_ID = \"your-client-id\";\nconst SCOPES = \"https://www.googleapis.com/auth/calendar.events https://www.googleapis.com/auth/calendar\";\nfunction Reserve() {\n  _s();\n  const [events, setEvents] = useState([]);\n  const [error, setError] = useState(null);\n  const [token, setToken] = useState(null);\n  const [selectedRoom, setSelectedRoom] = useState(\"\");\n  const [availableTimes, setAvailableTimes] = useState([]);\n  const [formData, setFormData] = useState({\n    date: \"\",\n    time: \"\",\n    email: \"\"\n  });\n  const rooms = [{\n    id: \"room1\",\n    name: \"Room 1\",\n    times: [\"09:00\", \"10:00\", \"11:00\"]\n  }, {\n    id: \"room2\",\n    name: \"Room 2\",\n    times: [\"12:00\", \"13:00\", \"14:00\"]\n  }];\n  useEffect(() => {\n    const loadGoogleApis = () => {\n      const script = document.createElement(\"script\");\n      script.src = \"https://apis.google.com/js/api.js\";\n      script.onload = initializeGoogleApis;\n      document.body.appendChild(script);\n    };\n    const initializeGoogleApis = () => {\n      gapi.load(\"client:auth2\", () => {\n        gapi.client.init({\n          clientId: CLIENT_ID,\n          scope: SCOPES\n        }).then(() => {\n          const tokenClient = google.accounts.oauth2.initTokenClient({\n            client_id: CLIENT_ID,\n            scope: SCOPES,\n            callback: response => {\n              if (response.access_token) {\n                setToken(response.access_token);\n                loadEvents(response.access_token);\n              } else {\n                setError(\"Error obtaining Google token.\");\n              }\n            }\n          });\n          tokenClient.requestAccessToken();\n        });\n      });\n    };\n    if (!window.gapi) {\n      loadGoogleApis();\n    } else {\n      initializeGoogleApis();\n    }\n  }, []);\n  const loadEvents = accessToken => {\n    gapi.client.calendar.events.list({\n      calendarId: \"primary\"\n    }).then(response => {\n      const formattedEvents = response.result.items.map(event => ({\n        title: event.summary,\n        start: event.start.dateTime || event.start.date,\n        end: event.end.dateTime || event.end.date\n      }));\n      setEvents(formattedEvents);\n    }).catch(error => setError(\"Failed to load events.\"));\n  };\n  const handleRoomChange = e => {\n    const room = rooms.find(r => r.id === e.target.value);\n    setSelectedRoom(room.id);\n    setAvailableTimes(room.times);\n  };\n  const handleReservation = e => {\n    e.preventDefault();\n    if (!token) return setError(\"You must log in.\");\n    addReservationToGoogleCalendar({\n      room_id: selectedRoom,\n      email: formData.email,\n      start_time: `${formData.date}T${formData.time}:00`,\n      end_time: `${formData.date}T${parseInt(formData.time.split(\":\")[0]) + 1}:00:00`\n    });\n    setFormData({\n      date: \"\",\n      time: \"\",\n      email: \"\"\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Room Reservations\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleReservation\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FullCalendar, {\n      plugins: [dayGridPlugin, interactionPlugin],\n      events: events\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n}\n_s(Reserve, \"CeetUN/O6ABtXKdYRaDhLmBYRJk=\");\n_c = Reserve;\nexport default Reserve;\nvar _c;\n$RefreshReg$(_c, \"Reserve\");","map":{"version":3,"names":["React","useEffect","useState","FullCalendar","dayGridPlugin","interactionPlugin","jsxDEV","_jsxDEV","CLIENT_ID","SCOPES","Reserve","_s","events","setEvents","error","setError","token","setToken","selectedRoom","setSelectedRoom","availableTimes","setAvailableTimes","formData","setFormData","date","time","email","rooms","id","name","times","loadGoogleApis","script","document","createElement","src","onload","initializeGoogleApis","body","appendChild","gapi","load","client","init","clientId","scope","then","tokenClient","google","accounts","oauth2","initTokenClient","client_id","callback","response","access_token","loadEvents","requestAccessToken","window","accessToken","calendar","list","calendarId","formattedEvents","result","items","map","event","title","summary","start","dateTime","end","catch","handleRoomChange","e","room","find","r","target","value","handleReservation","preventDefault","addReservationToGoogleCalendar","room_id","start_time","end_time","parseInt","split","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","onSubmit","plugins","_c","$RefreshReg$"],"sources":["D:/cloud00/cloud-project/src/components/Reserve.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport FullCalendar from \"@fullcalendar/react\";\r\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\r\nimport interactionPlugin from \"@fullcalendar/interaction\";\r\n\r\nconst CLIENT_ID = \"your-client-id\";\r\nconst SCOPES = \"https://www.googleapis.com/auth/calendar.events https://www.googleapis.com/auth/calendar\";\r\n\r\nfunction Reserve() {\r\n  const [events, setEvents] = useState([]);\r\n  const [error, setError] = useState(null);\r\n  const [token, setToken] = useState(null);\r\n  const [selectedRoom, setSelectedRoom] = useState(\"\");\r\n  const [availableTimes, setAvailableTimes] = useState([]);\r\n  const [formData, setFormData] = useState({\r\n    date: \"\",\r\n    time: \"\",\r\n    email: \"\",\r\n  });\r\n\r\n  const rooms = [\r\n    { id: \"room1\", name: \"Room 1\", times: [\"09:00\", \"10:00\", \"11:00\"] },\r\n    { id: \"room2\", name: \"Room 2\", times: [\"12:00\", \"13:00\", \"14:00\"] },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    const loadGoogleApis = () => {\r\n      const script = document.createElement(\"script\");\r\n      script.src = \"https://apis.google.com/js/api.js\";\r\n      script.onload = initializeGoogleApis;\r\n      document.body.appendChild(script);\r\n    };\r\n\r\n    const initializeGoogleApis = () => {\r\n      gapi.load(\"client:auth2\", () => {\r\n        gapi.client.init({\r\n          clientId: CLIENT_ID,\r\n          scope: SCOPES,\r\n        }).then(() => {\r\n          const tokenClient = google.accounts.oauth2.initTokenClient({\r\n            client_id: CLIENT_ID,\r\n            scope: SCOPES,\r\n            callback: (response) => {\r\n              if (response.access_token) {\r\n                setToken(response.access_token);\r\n                loadEvents(response.access_token);\r\n              } else {\r\n                setError(\"Error obtaining Google token.\");\r\n              }\r\n            },\r\n          });\r\n          tokenClient.requestAccessToken();\r\n        });\r\n      });\r\n    };\r\n\r\n    if (!window.gapi) {\r\n      loadGoogleApis();\r\n    } else {\r\n      initializeGoogleApis();\r\n    }\r\n  }, []);\r\n\r\n  const loadEvents = (accessToken) => {\r\n    gapi.client.calendar.events\r\n      .list({\r\n        calendarId: \"primary\",\r\n      })\r\n      .then((response) => {\r\n        const formattedEvents = response.result.items.map((event) => ({\r\n          title: event.summary,\r\n          start: event.start.dateTime || event.start.date,\r\n          end: event.end.dateTime || event.end.date,\r\n        }));\r\n        setEvents(formattedEvents);\r\n      })\r\n      .catch((error) => setError(\"Failed to load events.\"));\r\n  };\r\n\r\n  const handleRoomChange = (e) => {\r\n    const room = rooms.find((r) => r.id === e.target.value);\r\n    setSelectedRoom(room.id);\r\n    setAvailableTimes(room.times);\r\n  };\r\n\r\n  const handleReservation = (e) => {\r\n    e.preventDefault();\r\n    if (!token) return setError(\"You must log in.\");\r\n    addReservationToGoogleCalendar({\r\n      room_id: selectedRoom,\r\n      email: formData.email,\r\n      start_time: `${formData.date}T${formData.time}:00`,\r\n      end_time: `${formData.date}T${parseInt(formData.time.split(\":\")[0]) + 1}:00:00`,\r\n    });\r\n    setFormData({ date: \"\", time: \"\", email: \"\" });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Room Reservations</h1>\r\n      {error && <p style={{ color: \"red\" }}>{error}</p>}\r\n      <form onSubmit={handleReservation}>\r\n        {/* Form fields */}\r\n      </form>\r\n      <FullCalendar plugins={[dayGridPlugin, interactionPlugin]} events={events} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Reserve;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}