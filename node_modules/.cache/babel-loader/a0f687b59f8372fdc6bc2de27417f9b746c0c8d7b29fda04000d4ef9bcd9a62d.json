{"ast":null,"code":"var _jsxFileName = \"D:\\\\cloud00\\\\cloud-project\\\\src\\\\components\\\\Reserve.js\",\n  _s = $RefreshSig$();\n/* global gapi google */\nimport React, { useEffect, useState } from \"react\";\nimport FullCalendar from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport interactionPlugin from \"@fullcalendar/interaction\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CLIENT_ID = \"16844726883-nktuvt7v0fvoua9h948nvvl5ljddau9p.apps.googleusercontent.com\";\nconst SCOPES = \"https://www.googleapis.com/auth/calendar.events https://www.googleapis.com/auth/calendar\";\nfunction Reserve() {\n  _s();\n  const [events, setEvents] = useState([]);\n  const [error, setError] = useState(null);\n  const [token, setToken] = useState(null);\n  const [selectedRoom, setSelectedRoom] = useState(\"\");\n  const [availableTimes, setAvailableTimes] = useState([]);\n  const [formData, setFormData] = useState({\n    date: \"\",\n    time: \"\",\n    email: \"\"\n  });\n  const rooms = [{\n    id: \"room1\",\n    name: \"Room 1\",\n    times: [\"09:00\", \"10:00\", \"11:00\"]\n  }, {\n    id: \"room2\",\n    name: \"Room 2\",\n    times: [\"12:00\", \"13:00\", \"14:00\"]\n  }];\n  useEffect(() => {\n    const initializeGoogleApi = () => {\n      gapi.load(\"client:auth2\", () => {\n        gapi.client.init({\n          clientId: CLIENT_ID,\n          scope: SCOPES\n        }).then(() => {\n          const tokenClient = google.accounts.oauth2.initTokenClient({\n            client_id: CLIENT_ID,\n            scope: SCOPES,\n            callback: response => {\n              if (response.access_token) {\n                console.log(\"Token received:\", response.access_token);\n                setToken(response.access_token);\n                loadEvents(response.access_token);\n              } else {\n                setError(\"Error obtaining token.\");\n              }\n            }\n          });\n          tokenClient.requestAccessToken();\n        });\n      });\n    };\n    if (!window.gapi) {\n      const script = document.createElement(\"script\");\n      script.src = \"https://apis.google.com/js/api.js\";\n      script.onload = initializeGoogleApi;\n      document.body.appendChild(script);\n    } else {\n      initializeGoogleApi();\n    }\n  }, []);\n  const loadEvents = accessToken => {\n    gapi.client.calendar.events.list({\n      calendarId: \"primary\",\n      showDeleted: false,\n      singleEvents: true,\n      orderBy: \"startTime\"\n    }).then(response => {\n      const formattedEvents = response.result.items.map(event => ({\n        title: event.summary,\n        start: event.start.dateTime || event.start.date,\n        end: event.end.dateTime || event.end.date\n      }));\n      setEvents(formattedEvents);\n    }).catch(error => {\n      console.error(\"Error loading events:\", error);\n      setError(\"Failed to load events. Please try again.\");\n    });\n  };\n  const addReservationToGoogleCalendar = reservation => {\n    gapi.client.calendar.events.insert({\n      calendarId: \"primary\",\n      resource: {\n        summary: `Room ${reservation.room_id} - Reserved by ${reservation.email}`,\n        start: {\n          dateTime: reservation.start_time,\n          timeZone: \"UTC\"\n        },\n        end: {\n          dateTime: reservation.end_time,\n          timeZone: \"UTC\"\n        }\n      }\n    }).then(() => {\n      setEvents(prevEvents => [...prevEvents, {\n        title: `Room ${reservation.room_id} - Reserved by ${reservation.email}`,\n        start: reservation.start_time,\n        end: reservation.end_time\n      }]);\n      alert(\"Reservation added successfully!\");\n    }).catch(error => {\n      console.error(\"Error adding reservation:\", error);\n      setError(\"Failed to add reservation. Please try again.\");\n    });\n  };\n  const handleRoomChange = e => {\n    const room = rooms.find(r => r.id === e.target.value);\n    setSelectedRoom(room.id);\n    setAvailableTimes(room.times);\n  };\n  const handleReservation = e => {\n    e.preventDefault();\n    if (!token) return setError(\"You must log in.\");\n    addReservationToGoogleCalendar({\n      room_id: selectedRoom,\n      email: formData.email,\n      start_time: `${formData.date}T${formData.time}:00`,\n      end_time: `${formData.date}T${parseInt(formData.time.split(\":\")[0]) + 1}:00:00`\n    });\n    setFormData({\n      date: \"\",\n      time: \"\",\n      email: \"\"\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Room Reservations\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleReservation,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Room:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: handleRoomChange,\n        value: selectedRoom,\n        required: true,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          disabled: true,\n          children: \"Select a room\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this), rooms.map(room => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: room.id,\n          children: room.name\n        }, room.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Date:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        value: formData.date,\n        onChange: e => setFormData({\n          ...formData,\n          date: e.target.value\n        }),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Time:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: formData.time,\n        onChange: e => setFormData({\n          ...formData,\n          time: e.target.value\n        }),\n        required: true,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          disabled: true,\n          children: \"Select a time\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this), availableTimes.map(time => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: time,\n          children: time\n        }, time, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Email:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        value: formData.email,\n        onChange: e => setFormData({\n          ...formData,\n          email: e.target.value\n        }),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Reserve\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FullCalendar, {\n      plugins: [dayGridPlugin, interactionPlugin],\n      initialView: \"dayGridMonth\",\n      events: events\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 5\n  }, this);\n}\n_s(Reserve, \"CeetUN/O6ABtXKdYRaDhLmBYRJk=\");\n_c = Reserve;\nexport default Reserve;\nvar _c;\n$RefreshReg$(_c, \"Reserve\");","map":{"version":3,"names":["React","useEffect","useState","FullCalendar","dayGridPlugin","interactionPlugin","jsxDEV","_jsxDEV","CLIENT_ID","SCOPES","Reserve","_s","events","setEvents","error","setError","token","setToken","selectedRoom","setSelectedRoom","availableTimes","setAvailableTimes","formData","setFormData","date","time","email","rooms","id","name","times","initializeGoogleApi","gapi","load","client","init","clientId","scope","then","tokenClient","google","accounts","oauth2","initTokenClient","client_id","callback","response","access_token","console","log","loadEvents","requestAccessToken","window","script","document","createElement","src","onload","body","appendChild","accessToken","calendar","list","calendarId","showDeleted","singleEvents","orderBy","formattedEvents","result","items","map","event","title","summary","start","dateTime","end","catch","addReservationToGoogleCalendar","reservation","insert","resource","room_id","start_time","timeZone","end_time","prevEvents","alert","handleRoomChange","e","room","find","r","target","value","handleReservation","preventDefault","parseInt","split","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","onSubmit","onChange","required","disabled","type","plugins","initialView","_c","$RefreshReg$"],"sources":["D:/cloud00/cloud-project/src/components/Reserve.js"],"sourcesContent":["/* global gapi google */\r\nimport React, { useEffect, useState } from \"react\";\r\nimport FullCalendar from \"@fullcalendar/react\";\r\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\r\nimport interactionPlugin from \"@fullcalendar/interaction\";\r\n\r\nconst CLIENT_ID = \"16844726883-nktuvt7v0fvoua9h948nvvl5ljddau9p.apps.googleusercontent.com\";\r\nconst SCOPES = \"https://www.googleapis.com/auth/calendar.events https://www.googleapis.com/auth/calendar\";\r\n\r\nfunction Reserve() {\r\n  const [events, setEvents] = useState([]);\r\n  const [error, setError] = useState(null);\r\n  const [token, setToken] = useState(null);\r\n  const [selectedRoom, setSelectedRoom] = useState(\"\");\r\n  const [availableTimes, setAvailableTimes] = useState([]);\r\n  const [formData, setFormData] = useState({\r\n    date: \"\",\r\n    time: \"\",\r\n    email: \"\",\r\n  });\r\n\r\n  const rooms = [\r\n    { id: \"room1\", name: \"Room 1\", times: [\"09:00\", \"10:00\", \"11:00\"] },\r\n    { id: \"room2\", name: \"Room 2\", times: [\"12:00\", \"13:00\", \"14:00\"] },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    const initializeGoogleApi = () => {\r\n      gapi.load(\"client:auth2\", () => {\r\n        gapi.client\r\n          .init({\r\n            clientId: CLIENT_ID,\r\n            scope: SCOPES,\r\n          })\r\n          .then(() => {\r\n            const tokenClient = google.accounts.oauth2.initTokenClient({\r\n              client_id: CLIENT_ID,\r\n              scope: SCOPES,\r\n              callback: (response) => {\r\n                if (response.access_token) {\r\n                  console.log(\"Token received:\", response.access_token);\r\n                  setToken(response.access_token);\r\n                  loadEvents(response.access_token);\r\n                } else {\r\n                  setError(\"Error obtaining token.\");\r\n                }\r\n              },\r\n            });\r\n            tokenClient.requestAccessToken();\r\n          });\r\n      });\r\n    };\r\n\r\n    if (!window.gapi) {\r\n      const script = document.createElement(\"script\");\r\n      script.src = \"https://apis.google.com/js/api.js\";\r\n      script.onload = initializeGoogleApi;\r\n      document.body.appendChild(script);\r\n    } else {\r\n      initializeGoogleApi();\r\n    }\r\n  }, []);\r\n\r\n  const loadEvents = (accessToken) => {\r\n    gapi.client.calendar.events\r\n      .list({\r\n        calendarId: \"primary\",\r\n        showDeleted: false,\r\n        singleEvents: true,\r\n        orderBy: \"startTime\",\r\n      })\r\n      .then((response) => {\r\n        const formattedEvents = response.result.items.map((event) => ({\r\n          title: event.summary,\r\n          start: event.start.dateTime || event.start.date,\r\n          end: event.end.dateTime || event.end.date,\r\n        }));\r\n        setEvents(formattedEvents);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error loading events:\", error);\r\n        setError(\"Failed to load events. Please try again.\");\r\n      });\r\n  };\r\n\r\n  const addReservationToGoogleCalendar = (reservation) => {\r\n    gapi.client.calendar.events\r\n      .insert({\r\n        calendarId: \"primary\",\r\n        resource: {\r\n          summary: `Room ${reservation.room_id} - Reserved by ${reservation.email}`,\r\n          start: {\r\n            dateTime: reservation.start_time,\r\n            timeZone: \"UTC\",\r\n          },\r\n          end: {\r\n            dateTime: reservation.end_time,\r\n            timeZone: \"UTC\",\r\n          },\r\n        },\r\n      })\r\n      .then(() => {\r\n        setEvents((prevEvents) => [\r\n          ...prevEvents,\r\n          {\r\n            title: `Room ${reservation.room_id} - Reserved by ${reservation.email}`,\r\n            start: reservation.start_time,\r\n            end: reservation.end_time,\r\n          },\r\n        ]);\r\n        alert(\"Reservation added successfully!\");\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error adding reservation:\", error);\r\n        setError(\"Failed to add reservation. Please try again.\");\r\n      });\r\n  };\r\n\r\n  const handleRoomChange = (e) => {\r\n    const room = rooms.find((r) => r.id === e.target.value);\r\n    setSelectedRoom(room.id);\r\n    setAvailableTimes(room.times);\r\n  };\r\n\r\n  const handleReservation = (e) => {\r\n    e.preventDefault();\r\n    if (!token) return setError(\"You must log in.\");\r\n    addReservationToGoogleCalendar({\r\n      room_id: selectedRoom,\r\n      email: formData.email,\r\n      start_time: `${formData.date}T${formData.time}:00`,\r\n      end_time: `${formData.date}T${parseInt(formData.time.split(\":\")[0]) + 1}:00:00`,\r\n    });\r\n    setFormData({ date: \"\", time: \"\", email: \"\" });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Room Reservations</h1>\r\n      {error && <p style={{ color: \"red\" }}>{error}</p>}\r\n      <form onSubmit={handleReservation}>\r\n        <label>Room:</label>\r\n        <select onChange={handleRoomChange} value={selectedRoom} required>\r\n          <option value=\"\" disabled>\r\n            Select a room\r\n          </option>\r\n          {rooms.map((room) => (\r\n            <option key={room.id} value={room.id}>\r\n              {room.name}\r\n            </option>\r\n          ))}\r\n        </select>\r\n        <label>Date:</label>\r\n        <input\r\n          type=\"date\"\r\n          value={formData.date}\r\n          onChange={(e) => setFormData({ ...formData, date: e.target.value })}\r\n          required\r\n        />\r\n        <label>Time:</label>\r\n        <select\r\n          value={formData.time}\r\n          onChange={(e) => setFormData({ ...formData, time: e.target.value })}\r\n          required\r\n        >\r\n          <option value=\"\" disabled>\r\n            Select a time\r\n          </option>\r\n          {availableTimes.map((time) => (\r\n            <option key={time} value={time}>\r\n              {time}\r\n            </option>\r\n          ))}\r\n        </select>\r\n        <label>Email:</label>\r\n        <input\r\n          type=\"email\"\r\n          value={formData.email}\r\n          onChange={(e) => setFormData({ ...formData, email: e.target.value })}\r\n          required\r\n        />\r\n        <button type=\"submit\">Reserve</button>\r\n      </form>\r\n      <FullCalendar\r\n        plugins={[dayGridPlugin, interactionPlugin]}\r\n        initialView=\"dayGridMonth\"\r\n        events={events}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Reserve;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}