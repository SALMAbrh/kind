{"ast":null,"code":"var _jsxFileName = \"D:\\\\cloud00\\\\cloud-project\\\\src\\\\components\\\\Reserve.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport FullCalendar from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport interactionPlugin from \"@fullcalendar/interaction\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CLIENT_ID = \"16844726883-nktuvt7v0fvoua9h948nvvl5ljddau9p.apps.googleusercontent.com\"; // Replace with your Google OAuth Client ID\nconst SCOPES = \"https://www.googleapis.com/auth/calendar.events https://www.googleapis.com/auth/calendar\";\nfunction Reserve({\n  userEmail\n}) {\n  _s();\n  const [events, setEvents] = useState([]);\n  const [error, setError] = useState(null);\n  const [token, setToken] = useState(null);\n  const [selectedRoom, setSelectedRoom] = useState(\"\");\n  const [availableTimes, setAvailableTimes] = useState([]);\n  const [formData, setFormData] = useState({\n    date: \"\",\n    time: \"\",\n    email: userEmail || \"\" // Autofill with authenticated user email\n  });\n  const rooms = [{\n    id: \"room1\",\n    name: \"Room 1\",\n    times: [\"09:00\", \"10:00\", \"11:00\"]\n  }, {\n    id: \"room2\",\n    name: \"Room 2\",\n    times: [\"12:00\", \"13:00\", \"14:00\"]\n  }];\n  useEffect(() => {\n    const initializeGoogleClient = () => {\n      if (!window.google) {\n        setError(\"Google API client not loaded. Please refresh the page.\");\n        return;\n      }\n      const tokenClient = window.google.accounts.oauth2.initTokenClient({\n        client_id: CLIENT_ID,\n        scope: SCOPES,\n        callback: response => {\n          if (response.access_token) {\n            setToken(response.access_token);\n            loadEvents(response.access_token);\n          } else {\n            setError(\"Error obtaining Google OAuth token.\");\n          }\n        }\n      });\n      tokenClient.requestAccessToken();\n    };\n    if (!token) {\n      initializeGoogleClient();\n    }\n  }, [token]);\n  const loadEvents = accessToken => {\n    if (!window.gapi) {\n      setError(\"Google API not loaded. Please refresh the page.\");\n      return;\n    }\n    window.gapi.load(\"client\", () => {\n      window.gapi.client.init({\n        apiKey: \"\",\n        // Add your API key if necessary\n        clientId: CLIENT_ID,\n        scope: SCOPES\n      }).then(() => {\n        return window.gapi.client.calendar.events.list({\n          calendarId: \"primary\",\n          showDeleted: false,\n          singleEvents: true,\n          orderBy: \"startTime\"\n        });\n      }).then(response => {\n        const formattedEvents = response.result.items.map(event => ({\n          title: event.summary,\n          start: event.start.dateTime,\n          end: event.end.dateTime\n        }));\n        setEvents(formattedEvents);\n      }).catch(error => {\n        console.error(\"Error loading events from Google Calendar:\", error);\n        setError(\"Failed to load events. Please try again later.\");\n      });\n    });\n  };\n  const addReservationToGoogleCalendar = reservation => {\n    window.gapi.client.calendar.events.insert({\n      calendarId: \"primary\",\n      resource: {\n        summary: `Room ${reservation.room_id} - Reserved by ${reservation.email}`,\n        start: {\n          dateTime: reservation.start_time,\n          timeZone: \"UTC\"\n        },\n        end: {\n          dateTime: reservation.end_time,\n          timeZone: \"UTC\"\n        }\n      }\n    }).then(() => {\n      setEvents(prevEvents => [...prevEvents, {\n        title: `Room ${reservation.room_id} - Reserved by ${reservation.email}`,\n        start: reservation.start_time,\n        end: reservation.end_time\n      }]);\n      alert(\"Reservation confirmed and added to Google Calendar.\");\n    }).catch(error => {\n      console.error(\"Error adding reservation to Google Calendar:\", error);\n      setError(\"Failed to add reservation. Please try again.\");\n    });\n  };\n  const handleRoomChange = e => {\n    const room = rooms.find(r => r.id === e.target.value);\n    setSelectedRoom(room.id);\n    setAvailableTimes(room.times);\n  };\n  const handleReservation = e => {\n    e.preventDefault();\n    if (!token) {\n      setError(\"You must be logged in to add a reservation.\");\n      return;\n    }\n    const newReservation = {\n      room_id: selectedRoom,\n      email: formData.email,\n      start_time: `${formData.date}T${formData.time}:00`,\n      end_time: `${formData.date}T${parseInt(formData.time.split(\":\")[0]) + 1}:00:00`\n    };\n    addReservationToGoogleCalendar(newReservation);\n    setFormData({\n      date: \"\",\n      time: \"\",\n      email: userEmail || \"\"\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Room Reservations\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleReservation,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Room: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: handleRoomChange,\n        value: selectedRoom,\n        required: true,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          disabled: true,\n          children: \"Select a room\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this), rooms.map(room => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: room.id,\n          children: room.name\n        }, room.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Date: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        value: formData.date,\n        onChange: e => setFormData({\n          ...formData,\n          date: e.target.value\n        }),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Time: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: formData.time,\n        onChange: e => setFormData({\n          ...formData,\n          time: e.target.value\n        }),\n        required: true,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          disabled: true,\n          children: \"Select a time\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this), availableTimes.map(time => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: time,\n          children: time\n        }, time, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Email: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        value: formData.email,\n        onChange: e => setFormData({\n          ...formData,\n          email: e.target.value\n        }),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Reserve\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FullCalendar, {\n      plugins: [dayGridPlugin, interactionPlugin],\n      initialView: \"dayGridMonth\",\n      events: events,\n      headerToolbar: {\n        left: \"prev,next today\",\n        center: \"title\",\n        right: \"dayGridMonth,dayGridWeek,dayGridDay\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 149,\n    columnNumber: 5\n  }, this);\n}\n_s(Reserve, \"v8lcvkhi6U5qtM/Urm2rZSei2EY=\");\n_c = Reserve;\nexport default Reserve;\nvar _c;\n$RefreshReg$(_c, \"Reserve\");","map":{"version":3,"names":["React","useEffect","useState","FullCalendar","dayGridPlugin","interactionPlugin","jsxDEV","_jsxDEV","CLIENT_ID","SCOPES","Reserve","userEmail","_s","events","setEvents","error","setError","token","setToken","selectedRoom","setSelectedRoom","availableTimes","setAvailableTimes","formData","setFormData","date","time","email","rooms","id","name","times","initializeGoogleClient","window","google","tokenClient","accounts","oauth2","initTokenClient","client_id","scope","callback","response","access_token","loadEvents","requestAccessToken","accessToken","gapi","load","client","init","apiKey","clientId","then","calendar","list","calendarId","showDeleted","singleEvents","orderBy","formattedEvents","result","items","map","event","title","summary","start","dateTime","end","catch","console","addReservationToGoogleCalendar","reservation","insert","resource","room_id","start_time","timeZone","end_time","prevEvents","alert","handleRoomChange","e","room","find","r","target","value","handleReservation","preventDefault","newReservation","parseInt","split","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","onSubmit","onChange","required","disabled","type","plugins","initialView","headerToolbar","left","center","right","_c","$RefreshReg$"],"sources":["D:/cloud00/cloud-project/src/components/Reserve.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport FullCalendar from \"@fullcalendar/react\";\r\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\r\nimport interactionPlugin from \"@fullcalendar/interaction\";\r\n\r\nconst CLIENT_ID = \"16844726883-nktuvt7v0fvoua9h948nvvl5ljddau9p.apps.googleusercontent.com\"; // Replace with your Google OAuth Client ID\r\nconst SCOPES = \"https://www.googleapis.com/auth/calendar.events https://www.googleapis.com/auth/calendar\";\r\n\r\nfunction Reserve({ userEmail }) {\r\n  const [events, setEvents] = useState([]);\r\n  const [error, setError] = useState(null);\r\n  const [token, setToken] = useState(null);\r\n  const [selectedRoom, setSelectedRoom] = useState(\"\");\r\n  const [availableTimes, setAvailableTimes] = useState([]);\r\n  const [formData, setFormData] = useState({\r\n    date: \"\",\r\n    time: \"\",\r\n    email: userEmail || \"\", // Autofill with authenticated user email\r\n  });\r\n\r\n  const rooms = [\r\n    { id: \"room1\", name: \"Room 1\", times: [\"09:00\", \"10:00\", \"11:00\"] },\r\n    { id: \"room2\", name: \"Room 2\", times: [\"12:00\", \"13:00\", \"14:00\"] },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    const initializeGoogleClient = () => {\r\n      if (!window.google) {\r\n        setError(\"Google API client not loaded. Please refresh the page.\");\r\n        return;\r\n      }\r\n\r\n      const tokenClient = window.google.accounts.oauth2.initTokenClient({\r\n        client_id: CLIENT_ID,\r\n        scope: SCOPES,\r\n        callback: (response) => {\r\n          if (response.access_token) {\r\n            setToken(response.access_token);\r\n            loadEvents(response.access_token);\r\n          } else {\r\n            setError(\"Error obtaining Google OAuth token.\");\r\n          }\r\n        },\r\n      });\r\n\r\n      tokenClient.requestAccessToken();\r\n    };\r\n\r\n    if (!token) {\r\n      initializeGoogleClient();\r\n    }\r\n  }, [token]);\r\n\r\n  const loadEvents = (accessToken) => {\r\n    if (!window.gapi) {\r\n      setError(\"Google API not loaded. Please refresh the page.\");\r\n      return;\r\n    }\r\n\r\n    window.gapi.load(\"client\", () => {\r\n      window.gapi.client\r\n        .init({\r\n          apiKey: \"\", // Add your API key if necessary\r\n          clientId: CLIENT_ID,\r\n          scope: SCOPES,\r\n        })\r\n        .then(() => {\r\n          return window.gapi.client.calendar.events.list({\r\n            calendarId: \"primary\",\r\n            showDeleted: false,\r\n            singleEvents: true,\r\n            orderBy: \"startTime\",\r\n          });\r\n        })\r\n        .then((response) => {\r\n          const formattedEvents = response.result.items.map((event) => ({\r\n            title: event.summary,\r\n            start: event.start.dateTime,\r\n            end: event.end.dateTime,\r\n          }));\r\n          setEvents(formattedEvents);\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error loading events from Google Calendar:\", error);\r\n          setError(\"Failed to load events. Please try again later.\");\r\n        });\r\n    });\r\n  };\r\n\r\n  const addReservationToGoogleCalendar = (reservation) => {\r\n    window.gapi.client.calendar.events\r\n      .insert({\r\n        calendarId: \"primary\",\r\n        resource: {\r\n          summary: `Room ${reservation.room_id} - Reserved by ${reservation.email}`,\r\n          start: {\r\n            dateTime: reservation.start_time,\r\n            timeZone: \"UTC\",\r\n          },\r\n          end: {\r\n            dateTime: reservation.end_time,\r\n            timeZone: \"UTC\",\r\n          },\r\n        },\r\n      })\r\n      .then(() => {\r\n        setEvents((prevEvents) => [\r\n          ...prevEvents,\r\n          {\r\n            title: `Room ${reservation.room_id} - Reserved by ${reservation.email}`,\r\n            start: reservation.start_time,\r\n            end: reservation.end_time,\r\n          },\r\n        ]);\r\n        alert(\"Reservation confirmed and added to Google Calendar.\");\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error adding reservation to Google Calendar:\", error);\r\n        setError(\"Failed to add reservation. Please try again.\");\r\n      });\r\n  };\r\n\r\n  const handleRoomChange = (e) => {\r\n    const room = rooms.find((r) => r.id === e.target.value);\r\n    setSelectedRoom(room.id);\r\n    setAvailableTimes(room.times);\r\n  };\r\n\r\n  const handleReservation = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!token) {\r\n      setError(\"You must be logged in to add a reservation.\");\r\n      return;\r\n    }\r\n\r\n    const newReservation = {\r\n      room_id: selectedRoom,\r\n      email: formData.email,\r\n      start_time: `${formData.date}T${formData.time}:00`,\r\n      end_time: `${formData.date}T${parseInt(formData.time.split(\":\")[0]) + 1}:00:00`,\r\n    };\r\n\r\n    addReservationToGoogleCalendar(newReservation);\r\n    setFormData({ date: \"\", time: \"\", email: userEmail || \"\" });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Room Reservations</h1>\r\n      {error && <p style={{ color: \"red\" }}>{error}</p>}\r\n\r\n      <form onSubmit={handleReservation}>\r\n        <label>Room: </label>\r\n        <select onChange={handleRoomChange} value={selectedRoom} required>\r\n          <option value=\"\" disabled>\r\n            Select a room\r\n          </option>\r\n          {rooms.map((room) => (\r\n            <option key={room.id} value={room.id}>\r\n              {room.name}\r\n            </option>\r\n          ))}\r\n        </select>\r\n        <label>Date: </label>\r\n        <input\r\n          type=\"date\"\r\n          value={formData.date}\r\n          onChange={(e) => setFormData({ ...formData, date: e.target.value })}\r\n          required\r\n        />\r\n        <label>Time: </label>\r\n        <select\r\n          value={formData.time}\r\n          onChange={(e) => setFormData({ ...formData, time: e.target.value })}\r\n          required\r\n        >\r\n          <option value=\"\" disabled>\r\n            Select a time\r\n          </option>\r\n          {availableTimes.map((time) => (\r\n            <option key={time} value={time}>\r\n              {time}\r\n            </option>\r\n          ))}\r\n        </select>\r\n        <label>Email: </label>\r\n        <input\r\n          type=\"email\"\r\n          value={formData.email}\r\n          onChange={(e) => setFormData({ ...formData, email: e.target.value })}\r\n          required\r\n        />\r\n        <button type=\"submit\">Reserve</button>\r\n      </form>\r\n\r\n      <FullCalendar\r\n        plugins={[dayGridPlugin, interactionPlugin]}\r\n        initialView=\"dayGridMonth\"\r\n        events={events}\r\n        headerToolbar={{\r\n          left: \"prev,next today\",\r\n          center: \"title\",\r\n          right: \"dayGridMonth,dayGridWeek,dayGridDay\",\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Reserve;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}