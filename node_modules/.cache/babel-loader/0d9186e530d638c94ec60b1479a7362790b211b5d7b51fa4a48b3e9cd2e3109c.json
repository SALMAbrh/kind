{"ast":null,"code":"var _jsxFileName = \"D:\\\\cloud00\\\\cloud-project\\\\src\\\\components\\\\Reserve.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport FullCalendar from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport interactionPlugin from \"@fullcalendar/interaction\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CLIENT_ID = \"YOUR_CLIENT_ID\"; // Replace with your Google OAuth Client ID\nconst SCOPES = \"https://www.googleapis.com/auth/calendar.events https://www.googleapis.com/auth/calendar\";\nfunction Reserve() {\n  _s();\n  const [events, setEvents] = useState([]); // Calendar events\n  const [error, setError] = useState(null); // Error messages\n  const [token, setToken] = useState(null); // Google OAuth token\n  const [selectedRoom, setSelectedRoom] = useState(\"\"); // Selected room\n  const [availableTimes, setAvailableTimes] = useState([]); // Available times\n  const [formData, setFormData] = useState({\n    date: \"\",\n    time: \"\",\n    email: \"\"\n  });\n  const rooms = [{\n    id: \"room1\",\n    name: \"Room 1\",\n    times: [\"09:00\", \"10:00\", \"11:00\"]\n  }, {\n    id: \"room2\",\n    name: \"Room 2\",\n    times: [\"12:00\", \"13:00\", \"14:00\"]\n  }];\n\n  // Initialize Google API and authenticate\n  useEffect(() => {\n    const initializeGIS = () => {\n      /* eslint-disable no-undef */\n      const tokenClient = google.accounts.oauth2.initTokenClient({\n        client_id: CLIENT_ID,\n        scope: SCOPES,\n        callback: response => {\n          if (response.access_token) {\n            setToken(response.access_token);\n            loadEvents(response.access_token);\n          } else {\n            setError(\"Error obtaining Google token.\");\n          }\n        }\n      });\n      tokenClient.requestAccessToken();\n    };\n    const checkGoogleLoaded = () => {\n      if (typeof google === \"undefined\") {\n        setTimeout(checkGoogleLoaded, 100);\n      } else {\n        initializeGIS();\n      }\n    };\n    checkGoogleLoaded();\n  }, []);\n\n  // Load events from Google Calendar\n  const loadEvents = accessToken => {\n    gapi.load(\"client\", () => {\n      gapi.client.init({\n        apiKey: \"\",\n        clientId: CLIENT_ID,\n        scope: SCOPES\n      }).then(() => {\n        return gapi.client.request({\n          path: \"https://www.googleapis.com/calendar/v3/calendars/primary/events\"\n        });\n      }).then(response => {\n        const formattedEvents = response.result.items.map(event => ({\n          title: event.summary,\n          start: event.start.dateTime,\n          end: event.end.dateTime\n        }));\n        setEvents(formattedEvents);\n      }).catch(error => {\n        console.error(\"Error loading events from Google Calendar:\", error);\n        setError(\"Failed to load events. Please try again.\");\n      });\n    });\n  };\n\n  // Add a reservation to Google Calendar\n  const addReservationToGoogleCalendar = reservation => {\n    gapi.client.calendar.events.insert({\n      calendarId: \"primary\",\n      resource: {\n        summary: `Room ${reservation.room_id} - Reserved by ${reservation.email}`,\n        start: {\n          dateTime: reservation.start_time,\n          timeZone: \"UTC\"\n        },\n        end: {\n          dateTime: reservation.end_time,\n          timeZone: \"UTC\"\n        }\n      }\n    }).then(response => {\n      // Add the reservation locally to events\n      setEvents(prevEvents => [...prevEvents, {\n        title: `Room ${reservation.room_id} - Reserved by ${reservation.email}`,\n        start: reservation.start_time,\n        end: reservation.end_time\n      }]);\n      alert(`Reservation confirmed and added to Google Calendar.`);\n    }).catch(error => {\n      console.error(\"Error adding reservation to Google Calendar:\", error);\n      setError(\"Failed to add reservation. Please try again.\");\n    });\n  };\n  const handleRoomChange = e => {\n    const room = rooms.find(r => r.id === e.target.value);\n    setSelectedRoom(room.id);\n    setAvailableTimes(room.times);\n  };\n  const handleReservation = e => {\n    e.preventDefault();\n    if (!token) {\n      setError(\"You must be logged in to add a reservation.\");\n      return;\n    }\n    const newReservation = {\n      room_id: selectedRoom,\n      email: formData.email,\n      start_time: `${formData.date}T${formData.time}:00`,\n      end_time: `${formData.date}T${parseInt(formData.time.split(\":\")[0]) + 1}:00:00`\n    };\n\n    // Add to Google Calendar\n    addReservationToGoogleCalendar(newReservation);\n\n    // Reset form\n    setFormData({\n      date: \"\",\n      time: \"\",\n      email: \"\"\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Room Reservations\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleReservation,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Room: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: handleRoomChange,\n        value: selectedRoom,\n        required: true,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          disabled: true,\n          children: \"Select a room\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this), rooms.map(room => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: room.id,\n          children: room.name\n        }, room.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Date: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        value: formData.date,\n        onChange: e => setFormData({\n          ...formData,\n          date: e.target.value\n        }),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Time: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: formData.time,\n        onChange: e => setFormData({\n          ...formData,\n          time: e.target.value\n        }),\n        required: true,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          disabled: true,\n          children: \"Select a time\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this), availableTimes.map(time => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: time,\n          children: time\n        }, time, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Email: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        value: formData.email,\n        onChange: e => setFormData({\n          ...formData,\n          email: e.target.value\n        }),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Reserve\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FullCalendar, {\n      plugins: [dayGridPlugin, interactionPlugin],\n      initialView: \"dayGridMonth\",\n      events: events,\n      headerToolbar: {\n        left: \"prev,next today\",\n        center: \"title\",\n        right: \"dayGridMonth,dayGridWeek,dayGridDay\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 150,\n    columnNumber: 5\n  }, this);\n}\n_s(Reserve, \"CeetUN/O6ABtXKdYRaDhLmBYRJk=\");\n_c = Reserve;\nexport default Reserve;\nvar _c;\n$RefreshReg$(_c, \"Reserve\");","map":{"version":3,"names":["React","useEffect","useState","FullCalendar","dayGridPlugin","interactionPlugin","jsxDEV","_jsxDEV","CLIENT_ID","SCOPES","Reserve","_s","events","setEvents","error","setError","token","setToken","selectedRoom","setSelectedRoom","availableTimes","setAvailableTimes","formData","setFormData","date","time","email","rooms","id","name","times","initializeGIS","tokenClient","google","accounts","oauth2","initTokenClient","client_id","scope","callback","response","access_token","loadEvents","requestAccessToken","checkGoogleLoaded","setTimeout","accessToken","gapi","load","client","init","apiKey","clientId","then","request","path","formattedEvents","result","items","map","event","title","summary","start","dateTime","end","catch","console","addReservationToGoogleCalendar","reservation","calendar","insert","calendarId","resource","room_id","start_time","timeZone","end_time","prevEvents","alert","handleRoomChange","e","room","find","r","target","value","handleReservation","preventDefault","newReservation","parseInt","split","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","onSubmit","onChange","required","disabled","type","plugins","initialView","headerToolbar","left","center","right","_c","$RefreshReg$"],"sources":["D:/cloud00/cloud-project/src/components/Reserve.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport FullCalendar from \"@fullcalendar/react\";\r\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\r\nimport interactionPlugin from \"@fullcalendar/interaction\";\r\n\r\nconst CLIENT_ID = \"YOUR_CLIENT_ID\"; // Replace with your Google OAuth Client ID\r\nconst SCOPES = \"https://www.googleapis.com/auth/calendar.events https://www.googleapis.com/auth/calendar\";\r\n\r\nfunction Reserve() {\r\n  const [events, setEvents] = useState([]); // Calendar events\r\n  const [error, setError] = useState(null); // Error messages\r\n  const [token, setToken] = useState(null); // Google OAuth token\r\n  const [selectedRoom, setSelectedRoom] = useState(\"\"); // Selected room\r\n  const [availableTimes, setAvailableTimes] = useState([]); // Available times\r\n  const [formData, setFormData] = useState({\r\n    date: \"\",\r\n    time: \"\",\r\n    email: \"\",\r\n  });\r\n\r\n  const rooms = [\r\n    { id: \"room1\", name: \"Room 1\", times: [\"09:00\", \"10:00\", \"11:00\"] },\r\n    { id: \"room2\", name: \"Room 2\", times: [\"12:00\", \"13:00\", \"14:00\"] },\r\n  ];\r\n\r\n  // Initialize Google API and authenticate\r\n  useEffect(() => {\r\n    const initializeGIS = () => {\r\n      /* eslint-disable no-undef */\r\n      const tokenClient = google.accounts.oauth2.initTokenClient({\r\n        client_id: CLIENT_ID,\r\n        scope: SCOPES,\r\n        callback: (response) => {\r\n          if (response.access_token) {\r\n            setToken(response.access_token);\r\n            loadEvents(response.access_token);\r\n          } else {\r\n            setError(\"Error obtaining Google token.\");\r\n          }\r\n        },\r\n      });\r\n\r\n      tokenClient.requestAccessToken();\r\n    };\r\n\r\n    const checkGoogleLoaded = () => {\r\n      if (typeof google === \"undefined\") {\r\n        setTimeout(checkGoogleLoaded, 100);\r\n      } else {\r\n        initializeGIS();\r\n      }\r\n    };\r\n\r\n    checkGoogleLoaded();\r\n  }, []);\r\n\r\n  // Load events from Google Calendar\r\n  const loadEvents = (accessToken) => {\r\n    gapi.load(\"client\", () => {\r\n      gapi.client\r\n        .init({\r\n          apiKey: \"\",\r\n          clientId: CLIENT_ID,\r\n          scope: SCOPES,\r\n        })\r\n        .then(() => {\r\n          return gapi.client.request({\r\n            path: \"https://www.googleapis.com/calendar/v3/calendars/primary/events\",\r\n          });\r\n        })\r\n        .then((response) => {\r\n          const formattedEvents = response.result.items.map((event) => ({\r\n            title: event.summary,\r\n            start: event.start.dateTime,\r\n            end: event.end.dateTime,\r\n          }));\r\n          setEvents(formattedEvents);\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error loading events from Google Calendar:\", error);\r\n          setError(\"Failed to load events. Please try again.\");\r\n        });\r\n    });\r\n  };\r\n\r\n  // Add a reservation to Google Calendar\r\n  const addReservationToGoogleCalendar = (reservation) => {\r\n    gapi.client.calendar.events\r\n      .insert({\r\n        calendarId: \"primary\",\r\n        resource: {\r\n          summary: `Room ${reservation.room_id} - Reserved by ${reservation.email}`,\r\n          start: {\r\n            dateTime: reservation.start_time,\r\n            timeZone: \"UTC\",\r\n          },\r\n          end: {\r\n            dateTime: reservation.end_time,\r\n            timeZone: \"UTC\",\r\n          },\r\n        },\r\n      })\r\n      .then((response) => {\r\n        // Add the reservation locally to events\r\n        setEvents((prevEvents) => [\r\n          ...prevEvents,\r\n          {\r\n            title: `Room ${reservation.room_id} - Reserved by ${reservation.email}`,\r\n            start: reservation.start_time,\r\n            end: reservation.end_time,\r\n          },\r\n        ]);\r\n        alert(`Reservation confirmed and added to Google Calendar.`);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error adding reservation to Google Calendar:\", error);\r\n        setError(\"Failed to add reservation. Please try again.\");\r\n      });\r\n  };\r\n\r\n  const handleRoomChange = (e) => {\r\n    const room = rooms.find((r) => r.id === e.target.value);\r\n    setSelectedRoom(room.id);\r\n    setAvailableTimes(room.times);\r\n  };\r\n\r\n  const handleReservation = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!token) {\r\n      setError(\"You must be logged in to add a reservation.\");\r\n      return;\r\n    }\r\n\r\n    const newReservation = {\r\n      room_id: selectedRoom,\r\n      email: formData.email,\r\n      start_time: `${formData.date}T${formData.time}:00`,\r\n      end_time: `${formData.date}T${parseInt(formData.time.split(\":\")[0]) + 1}:00:00`,\r\n    };\r\n\r\n    // Add to Google Calendar\r\n    addReservationToGoogleCalendar(newReservation);\r\n\r\n    // Reset form\r\n    setFormData({ date: \"\", time: \"\", email: \"\" });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Room Reservations</h1>\r\n      {error && <p style={{ color: \"red\" }}>{error}</p>}\r\n\r\n      <form onSubmit={handleReservation}>\r\n        <label>Room: </label>\r\n        <select onChange={handleRoomChange} value={selectedRoom} required>\r\n          <option value=\"\" disabled>\r\n            Select a room\r\n          </option>\r\n          {rooms.map((room) => (\r\n            <option key={room.id} value={room.id}>\r\n              {room.name}\r\n            </option>\r\n          ))}\r\n        </select>\r\n        <label>Date: </label>\r\n        <input\r\n          type=\"date\"\r\n          value={formData.date}\r\n          onChange={(e) => setFormData({ ...formData, date: e.target.value })}\r\n          required\r\n        />\r\n        <label>Time: </label>\r\n        <select\r\n          value={formData.time}\r\n          onChange={(e) => setFormData({ ...formData, time: e.target.value })}\r\n          required\r\n        >\r\n          <option value=\"\" disabled>\r\n            Select a time\r\n          </option>\r\n          {availableTimes.map((time) => (\r\n            <option key={time} value={time}>\r\n              {time}\r\n            </option>\r\n          ))}\r\n        </select>\r\n        <label>Email: </label>\r\n        <input\r\n          type=\"email\"\r\n          value={formData.email}\r\n          onChange={(e) => setFormData({ ...formData, email: e.target.value })}\r\n          required\r\n        />\r\n        <button type=\"submit\">Reserve</button>\r\n      </form>\r\n\r\n      <FullCalendar\r\n        plugins={[dayGridPlugin, interactionPlugin]}\r\n        initialView=\"dayGridMonth\"\r\n        events={events}\r\n        headerToolbar={{\r\n          left: \"prev,next today\",\r\n          center: \"title\",\r\n          right: \"dayGridMonth,dayGridWeek,dayGridDay\",\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Reserve;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}